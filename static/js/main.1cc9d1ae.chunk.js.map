{"version":3,"sources":["reportWebVitals.ts","components/Header.tsx","redux/reducers/TeamsReducer.ts","redux/reducers/LeaguesReducer.ts","redux/reducers/LeagueReducer.ts","redux/reducers/TeamListReducer.ts","redux/reducers/TeamInfoReducer.ts","redux/reducers/index.ts","redux/store/index.ts","router/route.tsx","index.tsx","utils/axios.ts","redux/thunk/api/index.ts","redux/thunk/TeamsThunk.ts","redux/thunk/LeaguesThunk.ts","redux/thunk/LeagueThunk.ts","redux/thunk/TeamListThunk.ts","redux/thunk/TeamInfoThunk.ts","components/common/Preloader.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","className","Toggle","aria-controls","Collapse","id","Nav","Link","as","to","teamsReducer","createSlice","name","initialState","teams","count","filters","isTryFetching","isFetching","isRejected","error","errorMessage","reducers","extraReducers","fetchTeamsByLeague","pending","state","fulfilled","payload","competition","rejected","action","tempRequseError","temp","message","split","parseInt","length","reducer","leaguesReducer","leagues","fetchAllLeagues","competitions","leagueReducer","matches","fetchLeagueMatches","teamListReducer","fetchMatches","teamInfoReducer","infoAboutTeam","crestUrl","team","area","clubColors","founded","venue","website","squad","fetchTeamInfo","rootReducer","combineReducers","teamList","league","teamInfo","routerReducer","history","createBrowserHistory","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","routerMiddleware","getDefaultMiddleware","store","createStore","LeaguesPage","React","lazy","TeamsPage","LeagueCalendar","TeamCalendar","MainRouter","ReactRouterRoute","Route","Suspense","fallback","Preloader","exact","path","component","from","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","headers","common","process","baseURL","leaguesAPI","fetchAll","plan","get","params","fetchMatchesById","season","dateFrom","dateTo","teamsAPI","fetchById","createAsyncThunk","a","response","data","animation"],"mappings":"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","file":"static/js/main.1cc9d1ae.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand='lg' bg='light' variant='light'>\r\n        <Navbar.Brand>\r\n          <i className='fas fa-futbol'></i>React-Football\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n        <Navbar.Collapse id='responsive-navbar-nav'>\r\n          <Nav className='mr-auto'>\r\n            <Nav.Link as={Link} to='/leagues_page'>\r\n              Leagues\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchTeamsByLeague } from '../thunk/TeamsThunk'\r\n\r\nconst initialState: any = {\r\n  teams: [],\r\n  count: 0,\r\n  name: '',\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst teamsSlice: any = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchTeamsByLeague.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchTeamsByLeague.fulfilled]: (state, { payload }: PayloadAction<any>) => {\r\n      state.teams = payload.teams\r\n      state.filters = payload.filters\r\n      state.name = payload.competition.name\r\n      state.count = payload.count\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchTeamsByLeague.rejected]: (state, action: PayloadAction<any>) => {\r\n      // @ts-ignore\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\nexport const teamsReducer = teamsSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchAllLeagues } from '../thunk/LeaguesThunk'\r\n\r\nconst initialState: any = {\r\n  leagues: [],\r\n  count: 0,\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst leaguesSlice: any = createSlice({\r\n  name: 'leagues',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchAllLeagues.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchAllLeagues.fulfilled]: (state, { payload }: PayloadAction<any>) => {\r\n      state.leagues = payload.competitions\r\n      state.filters = payload.filters\r\n      state.count = payload.count\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchAllLeagues.rejected]: (state, action: PayloadAction<any>) => {\r\n      // @ts-ignore\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\nexport const leaguesReducer = leaguesSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchLeagueMatches } from '../thunk/LeagueThunk'\r\n\r\nconst initialState: any = {\r\n  matches: [],\r\n  count: 0,\r\n  name: '',\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst leagueSlice: any = createSlice({\r\n  name: 'league',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchLeagueMatches.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchLeagueMatches.fulfilled]: (state, { payload }: PayloadAction<any>) => {\r\n      state.matches = payload.matches\r\n      state.filters = payload.filters\r\n      state.name = payload.competition.name\r\n      state.count = payload.count\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchLeagueMatches.rejected]: (state, action: PayloadAction<any>) => {\r\n      // @ts-ignore\r\n      //@ts-nocheck\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\nexport const leagueReducer = leagueSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchMatches } from '../thunk/TeamListThunk'\r\n\r\nconst initialState: any = {\r\n  matches: [],\r\n  count: 0,\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst teamListSlice: any = createSlice({\r\n  name: 'teamsList',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchMatches.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchMatches.fulfilled]: (state, { payload }: PayloadAction<any>) => {\r\n      state.matches = payload.matches\r\n      state.filters = payload.filters\r\n      state.count = payload.count\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchMatches.rejected]: (state, action: PayloadAction<any>) => {\r\n      // @ts-ignore\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\nexport const teamListReducer = teamListSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchTeamInfo } from '../thunk/TeamInfoThunk'\r\n\r\nconst initialState: any = {\r\n  infoAboutTeam: {\r\n    crestUrl: '',\r\n    team: '',\r\n    area: {\r\n      name: '',\r\n    },\r\n    clubColors: '',\r\n    founded: '',\r\n    venue: '',\r\n    website: '',\r\n    squad: [],\r\n  },\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst teamInfoSlice: any = createSlice({\r\n  name: 'teamInfo',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchTeamInfo.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchTeamInfo.fulfilled]: (state, { payload }: PayloadAction<any>) => {\r\n      state.infoAboutTeam = payload\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchTeamInfo.rejected]: (state, action: PayloadAction<any>) => {\r\n      // @ts-ignore\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\n// export const fetchProducts = createAction<IFiltersState>(`${productSlice.name}/fetchProducts`)\r\n// createAsyncThunk()\r\n// export const { setLoading, setTeams } = productSlice.actions\r\n\r\nexport const teamInfoReducer = teamInfoSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport { routerReducer } from 'react-router-redux'\r\nimport { teamsReducer } from './TeamsReducer'\r\nimport { leaguesReducer } from './LeaguesReducer'\r\nimport { leagueReducer } from './LeagueReducer'\r\nimport { teamListReducer } from './TeamListReducer'\r\nimport { teamInfoReducer } from './TeamInfoReducer'\r\n\r\nconst rootReducer = combineReducers<any>({\r\n  teams: teamsReducer,\r\n  leagues: leaguesReducer,\r\n  teamList: teamListReducer,\r\n  league: leagueReducer,\r\n  teamInfo: teamInfoReducer,\r\n  routerReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware, compose, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { routerMiddleware } from 'react-router-redux'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport rootReducer from '../reducers'\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\r\nconst enhancer = composeEnhancers(applyMiddleware( routerMiddleware(history), ...getDefaultMiddleware()))\r\nconst store = createStore(rootReducer, enhancer)\r\n\r\nexport default store","import React from 'react'\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Header from '../components/Header'\r\nimport { history } from '../redux/store'\r\nimport { QueryParamProvider } from 'use-query-params'\r\nimport Preloader from '../components/common/Preloader'\r\n\r\nconst LeaguesPage = React.lazy(() => import('../pages/LeaguesPage'))\r\nconst TeamsPage = React.lazy(() => import('../pages/TeamsPage'))\r\nconst LeagueCalendar = React.lazy(() => import('../pages/LeagueCalendar'))\r\nconst TeamCalendar = React.lazy(() => import('../pages/TeamCalendar'))\r\n\r\nconst MainRouter = () => {\r\n  return (\r\n    <Router history={history}>\r\n      <QueryParamProvider ReactRouterRoute={Route}>\r\n        <div className='main'>\r\n          <Header />\r\n          <div className='wrapper'>\r\n            <React.Suspense fallback={<Preloader/>}>\r\n              <Switch>\r\n                <Route exact path='/leagues_page' component={LeaguesPage} />\r\n                <Route exact path='/teams_page' component={TeamsPage} />\r\n                <Route exact path='/league_calendar' component={LeagueCalendar} />\r\n                <Route exact path='/team_calendar' component={TeamCalendar} />\r\n                <Redirect exact from='/' to='/leagues_page' />\r\n              </Switch>\r\n            </React.Suspense>\r\n          </div>\r\n        </div>\r\n      </QueryParamProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default MainRouter\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.scss'\nimport reportWebVitals from './reportWebVitals'\nimport MainRouter from './router/route'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <MainRouter />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import axios from \"axios\";\r\n\r\naxios.defaults.headers.common['X-Auth-Token'] = `${process.env.REACT_APP_API_TOKEN}`\r\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}v${process.env.REACT_APP_API_URL_VERSION}/`\r\n\r\nexport default axios;","import axios from '../../../utils/axios'\r\n\r\nexport const leaguesAPI = {\r\n  fetchAll(plan: any) {\r\n    return axios.get('/competitions', {\r\n      params: {\r\n        plan,\r\n      },\r\n    })\r\n  },\r\n  fetchMatchesById(id: any, season: any, dateFrom: any, dateTo: any) {\r\n    return axios.get(`/competitions/${id}/matches`, {\r\n      params: {\r\n        season,\r\n        dateFrom,\r\n        dateTo,\r\n      },\r\n    })\r\n  },\r\n}\r\n\r\nexport const teamsAPI = {\r\n  fetchTeamsByLeague(id: any, season: any) {\r\n    return axios.get(`/competitions/${id}/teams`, {\r\n      params: {\r\n        season,\r\n      },\r\n    })\r\n  },\r\n  fetchById(id: any) {\r\n    return axios.get(`/teams/${id}`)\r\n  },\r\n  fetchMatchesById(id: any, dateFrom: any, dateTo: any) {\r\n    return axios.get(`/teams/${id}/matches`, {\r\n      params: {\r\n        dateFrom,\r\n        dateTo,\r\n      },\r\n    })\r\n  },\r\n  fetchTeamInfo(id: number) {\r\n    return axios.get(`/teams/${id}`)\r\n  },\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { teamsAPI } from './api'\r\n\r\nexport const fetchTeamsByLeague: any = createAsyncThunk(\r\n  'teams/fetchAll',\r\n  async ({ id, season }: any) => {\r\n    const response = await teamsAPI.fetchTeamsByLeague(id, season)\r\n    return response.data\r\n  }\r\n)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { leaguesAPI } from './api'\r\n\r\nexport const fetchAllLeagues: any = createAsyncThunk('leagues/fetchAll', async ({ plan }: any) => {\r\n  const response = await leaguesAPI.fetchAll(plan)\r\n  return response.data\r\n})\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { leaguesAPI } from './api'\r\n\r\nexport const fetchLeagueMatches: any = createAsyncThunk(\r\n  'league/fetchLeagueMatches',\r\n  async ({ id, season, dateFrom, dateTo }: any) => {\r\n    const response = await leaguesAPI.fetchMatchesById(id, season, dateFrom, dateTo)\r\n    return response.data\r\n  }\r\n)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { teamsAPI } from './api'\r\n\r\nexport const fetchMatches: any = createAsyncThunk(\r\n  'teamList/fetchAll',\r\n  async ({ id, dateFrom, dateTo }: any) => {\r\n    const response = await teamsAPI.fetchMatchesById(id, dateFrom, dateTo)\r\n    return response.data\r\n  }\r\n)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { teamsAPI } from './api'\r\n\r\nexport const fetchTeamInfo: any = createAsyncThunk('teamInfo/fetchAll', async ({ id }: any) => {\r\n  const response = await teamsAPI.fetchTeamInfo(id)\r\n  return response.data\r\n})\r\n","import React from 'react'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='preloader'>\r\n      <Spinner animation='border' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader\r\n"],"sourceRoot":""}