{"version":3,"sources":["reportWebVitals.ts","components/common/Switch/index.tsx","components/Header.tsx","redux/reducers/TeamsReducer.ts","redux/reducers/LeaguesReducer.ts","redux/reducers/LeagueReducer.ts","redux/reducers/TeamListReducer.ts","redux/reducers/TeamInfoReducer.ts","redux/reducers/index.ts","redux/store/index.ts","router/route.tsx","i18n/index.ts","i18n/locales/index.ts","index.tsx","utils/axios.ts","redux/thunk/api/index.ts","redux/reducers/AppReducer.ts","redux/thunk/TeamsThunk.ts","redux/thunk/LeaguesThunk.ts","redux/thunk/LeagueThunk.ts","redux/thunk/TeamListThunk.ts","redux/thunk/TeamInfoThunk.ts","components/common/Preloader.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Switch","id","name","icons","checked","onChange","small","optionLabels","disabled","className","type","e","target","classnames","tabIndex","onKeyDown","keyCode","preventDefault","handleKeyPress","htmlFor","defaultProps","Header","dispatch","useDispatch","useSelector","appReducer","isDarkTheme","language","React","useState","toggle","setToggle","engLang","setEngLang","i18n","useTranslation","useEffect","toggleTheme","toggleLanguage","changeLanguage","Navbar","sticky","collapseOnSelect","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","Text","teamsReducer","createSlice","initialState","teams","count","filters","isTryFetching","isFetching","isRejected","error","errorMessage","reducers","extraReducers","fetchTeamsByLeague","pending","state","fulfilled","payload","competition","rejected","action","tempRequseError","temp","message","split","parseInt","length","reducer","leaguesReducer","leagues","fetchAllLeagues","competitions","leagueReducer","matches","fetchLeagueMatches","teamListReducer","fetchMatches","teamInfoReducer","infoAboutTeam","crestUrl","team","area","clubColors","founded","venue","website","squad","fetchTeamInfo","rootReducer","combineReducers","teamList","league","teamInfo","routerReducer","history","createBrowserHistory","basename","process","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","routerMiddleware","getDefaultMiddleware","store","createStore","LeaguesPage","lazy","TeamsPage","LeagueCalendar","TeamCalendar","MainRouter","ReactRouterRoute","Route","Suspense","fallback","Preloader","path","component","from","resources","en","leagueCalendar","leagueCalendarEn","teamsEn","teamCalendar","teamCalendarEn","leaguesEn","ru","leagueCalendarRu","teamsRu","teamCalendarRu","leaguesRu","use","initReactI18next","init","keySeparator","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","headers","common","baseURL","leaguesAPI","fetchAll","plan","get","params","fetchMatchesById","season","dateFrom","dateTo","teamsAPI","fetchById","LS","x","global","localStorage","getItem","appSlice","setItem","actions","createAsyncThunk","a","response","data","animation"],"mappings":"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","file":"static/js/main.91af8c7b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style.scss'\r\nimport classnames from 'classnames'\r\n\r\nconst Switch = ({ id, name, icons, checked, onChange, optionLabels, small, disabled }: any) => {\r\n  function handleKeyPress(e: any) {\r\n    if (e.keyCode !== 32) return\r\n\r\n    e.preventDefault()\r\n    onChange(!checked)\r\n  }\r\n\r\n  return (\r\n    <div className={'toggle-switch' + (small ? ' small-switch' : '')}>\r\n      <input\r\n        type='checkbox'\r\n        name={name}\r\n        className='toggle-switch-checkbox'\r\n        id={id}\r\n        checked={checked}\r\n        onChange={(e: any) => onChange(e.target.checked)}\r\n        disabled={disabled}\r\n      />\r\n      {id ? (\r\n        <label\r\n          className={classnames('toggle-switch-label', { 'toggle-switch-label-checked': checked })}\r\n          tabIndex={disabled ? -1 : 1}\r\n          onKeyDown={(e: any) => handleKeyPress(e)}\r\n          htmlFor={id}\r\n        >\r\n          <span\r\n            className={classnames('toggle-switch-inner', {\r\n              'toggle-switch-disabled': disabled,\r\n            })}\r\n            tabIndex={-1}\r\n          >\r\n            {checked ? icons[0] : icons[1]}\r\n          </span>\r\n          <span\r\n            className={\r\n              disabled ? 'toggle-switch-switch toggle-switch-disabled' : 'toggle-switch-switch'\r\n            }\r\n            tabIndex={-1}\r\n          />\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nSwitch.defaultProps = {\r\n  icons: [<div>yes</div>, <div>no</div>],\r\n}\r\n\r\nSwitch.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n  optionLabels: PropTypes.array,\r\n  small: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icons: PropTypes.array,\r\n  id: PropTypes.string\r\n}\r\n\r\nexport default Switch\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { toggleTheme, toggleLanguage } from '../redux/reducers/AppReducer'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Switch from './common/Switch'\r\nimport classnames from 'classnames'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { isDarkTheme, language } = useSelector(({ appReducer }: any) => appReducer)\r\n  const [toggle, setToggle] = React.useState(isDarkTheme)\r\n  const [engLang, setEngLang] = React.useState(language === 'en')\r\n  const { i18n } = useTranslation()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(toggleTheme({ isDarkTheme: toggle }))\r\n  }, [dispatch, toggle])\r\n\r\n  React.useEffect(() => {\r\n    dispatch(toggleLanguage({ language: engLang ? 'en' : 'ru'}))\r\n    i18n.changeLanguage(engLang ? 'en' : 'ru')\r\n  }, [dispatch, engLang, i18n])\r\n\r\n  return (\r\n    <>\r\n        <Navbar\r\n          className={classnames('Header', { 'Header--dark': isDarkTheme})}\r\n          sticky='top'\r\n          collapseOnSelect\r\n          expand='lg'\r\n        >\r\n          <div className='wrapper-header'>\r\n            <Navbar.Brand as={Link} to='/leagues_page'>\r\n              <i className='fas fa-futbol'></i>React-Football\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n            <Navbar.Collapse id='responsive-navbar-nav'>\r\n              <Nav className=\"ml-auto\">\r\n                <Navbar.Text>\r\n                  <Switch\r\n                    onChange={setToggle}\r\n                    id='1'\r\n                    name='switchTheme'\r\n                    checked={toggle}\r\n                    icons={[<i className='fas fa-moon'></i>, <i className='fas fa-sun'></i>]}\r\n                  />\r\n                </Navbar.Text>\r\n                <Navbar.Text>\r\n                  <Switch\r\n                    onChange={setEngLang}\r\n                    id='2'\r\n                    name='switchLang'\r\n                    checked={engLang}\r\n                    icons={[<div>en</div>, <div>ru</div>]}\r\n                  />\r\n                </Navbar.Text>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </div>\r\n        </Navbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchTeamsByLeague } from '../thunk/TeamsThunk'\r\n  \r\ninterface teamOfListCompetition {\r\n    id: number\r\n    area: {\r\n      id: number\r\n      name: string\r\n    }\r\n    name: string\r\n    shortName: string\r\n    tla: string\r\n    crestUrl: string\r\n    address: string\r\n    phone: string\r\n    webstire: string\r\n    email: string\r\n    founded: number\r\n    clubColors: string\r\n    venue: string\r\n    lastUpdate: Date\r\n  }\r\n\r\ninterface teamsListCompetition {\r\n  count: number\r\n  filters: any\r\n  id: number\r\n  competition: {\r\n    id: number\r\n    area: {\r\n      id: number\r\n      name: string\r\n    }\r\n    name: string\r\n    code: string\r\n    plan: string\r\n    lastUpdated: Date\r\n  }\r\n  season: {\r\n    id: number\r\n    startDate: string\r\n    endDate: string\r\n    currentMatchday: null\r\n    availableStages: Array<string>\r\n  }\r\n  teams: Array<teamOfListCompetition>\r\n}\r\n\r\ninterface IInitialState {\r\n  teams: Array<teamOfListCompetition>,\r\n  count: number,\r\n  name: string,\r\n  filters: any,\r\n  isTryFetching: boolean,\r\n  isFetching: boolean,\r\n  isRejected: boolean,\r\n  error: number | null,\r\n  errorMessage: string | null,\r\n}\r\n\r\nconst initialState: IInitialState = {\r\n  teams: [],\r\n  count: 0,\r\n  name: '',\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst teamsSlice: any = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchTeamsByLeague.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchTeamsByLeague.fulfilled]: (state, { payload }: PayloadAction<teamsListCompetition>) => {\r\n      state.teams = payload.teams\r\n      state.filters = payload.filters\r\n      state.name = payload.competition.name\r\n      state.count = payload.count\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchTeamsByLeague.rejected]: (state, action: PayloadAction<any>) => {\r\n      // @ts-ignore\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\nexport const teamsReducer = teamsSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchAllLeagues } from '../thunk/LeaguesThunk'\r\n\r\nconst initialState: any = {\r\n  leagues: [],\r\n  count: 0,\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst leaguesSlice: any = createSlice({\r\n  name: 'leagues',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchAllLeagues.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchAllLeagues.fulfilled]: (state, { payload }: PayloadAction<any>) => {\r\n      state.leagues = payload.competitions\r\n      state.filters = payload.filters\r\n      state.count = payload.count\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchAllLeagues.rejected]: (state, action: PayloadAction<any>) => {\r\n      // @ts-ignore\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\nexport const leaguesReducer = leaguesSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchLeagueMatches } from '../thunk/LeagueThunk'\r\n\r\nconst initialState: any = {\r\n  matches: [],\r\n  count: 0,\r\n  name: '',\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst leagueSlice: any = createSlice({\r\n  name: 'league',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchLeagueMatches.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchLeagueMatches.fulfilled]: (state, { payload }: PayloadAction<any>) => {\r\n      state.matches = payload.matches\r\n      state.filters = payload.filters\r\n      state.name = payload.competition.name\r\n      state.count = payload.count\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchLeagueMatches.rejected]: (state, action: any) => {\r\n      // @ts-ignore\r\n      //@ts-nocheck\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\nexport const leagueReducer = leagueSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchMatches } from '../thunk/TeamListThunk'\r\n\r\nconst initialState: any = {\r\n  matches: [],\r\n  count: 0,\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst teamListSlice: any = createSlice({\r\n  name: 'teamsList',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchMatches.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchMatches.fulfilled]: (state, { payload }: PayloadAction<any>) => {\r\n      state.matches = payload.matches\r\n      state.filters = payload.filters\r\n      state.count = payload.count\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchMatches.rejected]: (state, action: PayloadAction<any>) => {\r\n      // @ts-ignore\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\nexport const teamListReducer = teamListSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { fetchTeamInfo } from '../thunk/TeamInfoThunk'\r\n\r\ninterface player {\r\n  id: number\r\n  name: string\r\n  position: string\r\n  dateOfBirth: Date\r\n  nationality: string\r\n  role: string\r\n}\r\ninterface IInitialState {\r\n  infoAboutTeam: {\r\n    crestUrl: string\r\n    team: string\r\n    area: {\r\n      name: string\r\n    },\r\n    clubColors: string\r\n    founded: any\r\n    venue: string\r\n    website: string\r\n    squad: Array<player>,\r\n  }\r\n  filters: any\r\n  isTryFetching: boolean\r\n  isFetching: boolean\r\n  isRejected: boolean\r\n  error: number | null\r\n  errorMessage: string | null\r\n}\r\n\r\nconst initialState: IInitialState = {\r\n  infoAboutTeam: {\r\n    crestUrl: '',\r\n    team: '',\r\n    area: {\r\n      name: '',\r\n    },\r\n    clubColors: '',\r\n    founded: '',\r\n    venue: '',\r\n    website: '',\r\n    squad: [],\r\n  },\r\n  filters: {},\r\n  isTryFetching: false,\r\n  isFetching: false,\r\n  isRejected: false,\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst teamInfoSlice: any = createSlice({\r\n  name: 'teamInfo',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchTeamInfo.pending]: (state) => {\r\n      state.isFetching = true\r\n      state.errorMessage = null\r\n      state.error = null\r\n    },\r\n    [fetchTeamInfo.fulfilled]: (state, { payload }: PayloadAction<any>) => {\r\n      state.infoAboutTeam = payload\r\n      state.isTryFetching = true\r\n      state.isFetching = false\r\n      state.isRejected = false\r\n    },\r\n    [fetchTeamInfo.rejected]: (state, action: PayloadAction<any>) => {\r\n      // @ts-ignore\r\n      const tempRequseError = action.error\r\n      const temp = tempRequseError.message.split(' ')\r\n      state.errorMessage = tempRequseError.message\r\n      state.error = parseInt(temp[temp.length - 1], 10)\r\n      state.isFetching = false\r\n      state.isRejected = true\r\n    },\r\n  },\r\n})\r\n\r\n// export const fetchProducts = createAction<IFiltersState>(`${productSlice.name}/fetchProducts`)\r\n// createAsyncThunk()\r\n// export const { setLoading, setTeams } = productSlice.actions\r\n\r\nexport const teamInfoReducer = teamInfoSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport { routerReducer } from 'react-router-redux'\r\nimport { teamsReducer } from './TeamsReducer'\r\nimport { leaguesReducer } from './LeaguesReducer'\r\nimport { leagueReducer } from './LeagueReducer'\r\nimport { teamListReducer } from './TeamListReducer'\r\nimport { teamInfoReducer } from './TeamInfoReducer'\r\nimport { appReducer } from './AppReducer'\r\n\r\nconst rootReducer = combineReducers<any>({\r\n  teams: teamsReducer,\r\n  leagues: leaguesReducer,\r\n  teamList: teamListReducer,\r\n  league: leagueReducer,\r\n  teamInfo: teamInfoReducer,\r\n  appReducer: appReducer,\r\n  routerReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware, compose, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { routerMiddleware } from 'react-router-redux'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport rootReducer from '../reducers'\r\n\r\nexport const history = createBrowserHistory({ basename: `${process.env.REACT_APP_API_PUBLIC_URL}` })\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\r\nconst enhancer = composeEnhancers(applyMiddleware( routerMiddleware(history), ...getDefaultMiddleware()))\r\nconst store = createStore(rootReducer, enhancer)\r\n\r\nexport default store","import React from 'react'\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Header from '../components/Header'\r\nimport { history } from '../redux/store'\r\nimport { QueryParamProvider } from 'use-query-params'\r\nimport Preloader from '../components/common/Preloader'\r\nimport { useSelector } from 'react-redux'\r\nimport classnames from 'classnames'\r\n\r\nconst LeaguesPage = React.lazy(() => import('../pages/LeaguesPage'))\r\nconst TeamsPage = React.lazy(() => import('../pages/TeamsPage'))\r\nconst LeagueCalendar = React.lazy(() => import('../pages/LeagueCalendar'))\r\nconst TeamCalendar = React.lazy(() => import('../pages/TeamCalendar'))\r\n\r\nconst MainRouter = () => {\r\n  const isDarkTheme = useSelector(({appReducer}: any) => appReducer.isDarkTheme)\r\n\r\n  return (\r\n    <Router history={history} >\r\n      <QueryParamProvider ReactRouterRoute={Route}>\r\n        <div className={classnames('main', {'main-dark': isDarkTheme})}>\r\n          <Header />\r\n          <div className='wrapper'>\r\n            <React.Suspense fallback={<Preloader/>}>\r\n              <Switch>\r\n                <Route path='/leagues_page' component={LeaguesPage} />\r\n                <Route path='/teams_page' component={TeamsPage} />\r\n                <Route path='/league_calendar' component={LeagueCalendar} />\r\n                <Route path='/team_calendar' component={TeamCalendar} />\r\n                <Redirect from='/' to='/leagues_page' />\r\n              </Switch>\r\n            </React.Suspense>\r\n          </div>\r\n        </div>\r\n      </QueryParamProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default MainRouter\r\n","import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\nimport { ru, en } from './locales'\n\nconst resources = {\n  en,\n  ru\n}\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n ","import leagueCalendarEn from './pages/LeagueCalendar/default.en.json'\nimport leagueCalendarRu from './pages/LeagueCalendar/default.json'\nimport leaguesEn from './pages/Leagues/default.en.json'\nimport leaguesRu from './pages/Leagues/default.json'\nimport teamsEn from './pages/Teams/default.en.json'\nimport teamsRu from './pages/Teams/default.json'\nimport teamCalendarEn from './pages/TeamCalendar/default.en.json'\nimport teamCalendarRu from './pages/TeamCalendar/default.json'\n\nlet en = {\n  leagueCalendar: leagueCalendarEn['en'],\n  teams: teamsEn['en'],\n  teamCalendar: teamCalendarEn['en'],\n  leagues: leaguesEn['en'],\n}\nlet ru = {\n  leagueCalendar: leagueCalendarRu['ru'],\n  teams: teamsRu['ru'],\n  teamCalendar: teamCalendarRu['ru'],\n  leagues: leaguesRu['ru'],\n}\n\nexport { ru, en }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/App.scss'\nimport reportWebVitals from './reportWebVitals'\nimport MainRouter from './router/route'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport './i18n/index.ts'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <MainRouter />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import axios from \"axios\";\r\n\r\naxios.defaults.headers.common['X-Auth-Token'] = `${process.env.REACT_APP_API_TOKEN}`\r\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}v${process.env.REACT_APP_API_URL_VERSION}/`\r\n\r\nexport default axios;","import axios from '../../../utils/axios'\r\n\r\nexport const leaguesAPI = {\r\n  fetchAll(plan: any) {\r\n    return axios.get('/competitions', {\r\n      params: {\r\n        plan,\r\n      },\r\n    })\r\n  },\r\n  fetchMatchesById(id: any, season: any, dateFrom: any, dateTo: any) {\r\n    return axios.get(`/competitions/${id}/matches`, {\r\n      params: {\r\n        season,\r\n        dateFrom,\r\n        dateTo,\r\n      },\r\n    })\r\n  },\r\n}\r\n\r\nexport const teamsAPI = {\r\n  fetchTeamsByLeague(id: any, season: any) {\r\n    return axios.get(`/competitions/${id}/teams`, {\r\n      params: {\r\n        season,\r\n      },\r\n    })\r\n  },\r\n  fetchById(id: any) {\r\n    return axios.get(`/teams/${id}`)\r\n  },\r\n  fetchMatchesById(id: any, dateFrom: any, dateTo: any) {\r\n    return axios.get(`/teams/${id}/matches`, {\r\n      params: {\r\n        dateFrom,\r\n        dateTo,\r\n      },\r\n    })\r\n  },\r\n  fetchTeamInfo(id: number) {\r\n    return axios.get(`/teams/${id}`)\r\n  },\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n  \r\n\r\n\r\ninterface IInitialState {\r\n  isDarkTheme: boolean | null | string,\r\n  language: null | string | any,\r\n  error: number | null,\r\n  errorMessage: string | null,\r\n}\r\nconst LS = (x: any) => global.localStorage.getItem(x)\r\nconst initialState: IInitialState = {\r\n  isDarkTheme: 'true' === LS('isDarkTheme'),\r\n  language: ((null === LS('language')) ? ('en' ): LS('language')),\r\n  error: null,\r\n  errorMessage: null,\r\n}\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    toggleTheme: (state, {payload}: PayloadAction<any>) => {\r\n      global.localStorage.setItem('isDarkTheme', payload.isDarkTheme)\r\n      state.isDarkTheme = payload.isDarkTheme\r\n    },\r\n    toggleLanguage: (state, {payload}: PayloadAction<any>) => {\r\n      global.localStorage.setItem('language', payload.language)\r\n      state.language = payload.language\r\n    },\r\n  },\r\n})\r\nexport const {toggleTheme, toggleLanguage} = appSlice.actions\r\n\r\nexport const appReducer = appSlice.reducer\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { teamsAPI } from './api'\r\n\r\nexport const fetchTeamsByLeague: any = createAsyncThunk(\r\n  'teams/fetchAll',\r\n  async ({ id, season }: any) => {\r\n    const response = await teamsAPI.fetchTeamsByLeague(id, season)\r\n    return response.data\r\n  }\r\n)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { leaguesAPI } from './api'\r\n\r\nexport const fetchAllLeagues: any = createAsyncThunk('leagues/fetchAll', async ({ plan }: any) => {\r\n  const response = await leaguesAPI.fetchAll(plan)\r\n  return response.data\r\n})\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { leaguesAPI } from './api'\r\n\r\ninterface x {\r\n  id: number\r\n  season: string\r\n  dateFrom: Date\r\n  dateTo: Date\r\n}\r\nexport const fetchLeagueMatches: any = createAsyncThunk(\r\n  'league/fetchLeagueMatches',\r\n  async ({ id, season, dateFrom, dateTo }: x) => {\r\n    const response = await leaguesAPI.fetchMatchesById(id, season, dateFrom, dateTo)\r\n    return response.data\r\n  }\r\n)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { teamsAPI } from './api'\r\n\r\nexport const fetchMatches: any = createAsyncThunk(\r\n  'teamList/fetchAll',\r\n  async ({ id, dateFrom, dateTo }: any) => {\r\n    const response = await teamsAPI.fetchMatchesById(id, dateFrom, dateTo)\r\n    return response.data\r\n  }\r\n)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { teamsAPI } from './api'\r\n\r\nexport const fetchTeamInfo: any = createAsyncThunk('teamInfo/fetchAll', async ({ id }: any) => {\r\n  const response = await teamsAPI.fetchTeamInfo(id)\r\n  return response.data\r\n})\r\n","import React from 'react'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='preloader'>\r\n      <Spinner animation='border' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader\r\n"],"sourceRoot":""}