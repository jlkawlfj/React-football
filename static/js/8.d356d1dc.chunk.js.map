{"version":3,"sources":["components/common/ErrorBanner.tsx","components/common/NoFound.tsx","components/LeagueCard.tsx","pages/LeaguesPage.tsx"],"names":["ErrorBanner","error","message","className","to","NoFound","type","LeagueCard","league","season","seasonUrl","emblemUrl","src","alt","name","Button","as","Link","id","variant","LeaguesPage","useQueryParam","NumberParam","setSeason","dispatch","useDispatch","useSelector","leagues","count","isFetching","isRejected","errorMessage","isTryFetching","React","useEffect","fetchAllLeagues","plan","Form","Group","controlId","Label","Control","custom","value","onChange","e","target","Preloader","Card","ListGroup","map","index","Item"],"mappings":"wHAAA,wBAmCeA,IA5BuB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,QAC9C,OAAKD,EAIH,gCACE,qBAAKE,UAAU,eAAf,SACE,iCACc,MAAVF,GAA2B,MAAVA,IACjB,gCACE,6CACA,sEAGO,MAAVA,GACC,gCACE,2CACA,yEAGJ,cAAC,IAAD,CAAMG,GAAG,gBAAT,0BAGJ,qBAAKD,UAAU,mCAAf,SAAmDD,GAAW,QArBzD,O,iCCTX,gBAUeG,IAJmB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KACnC,OAAO,sBAAKH,UAAU,WAAf,gBAA8BG,GAAQ,GAAtC,c,qGCmCMC,EAtCmB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,OACrCC,EAAYD,EAAM,kBAAcA,GAAW,GACjD,OACE,sBAAKN,UAAU,cAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOA,UAAU,sBAAjB,SACGK,EAAOG,UACN,qBACER,UAAU,mBACVS,IAAKJ,EAAOG,UACZE,IAAG,iBAAYL,EAAOM,KAAnB,aAGL,mBAAGX,UAAU,mBAIjB,uBAAOA,UAAU,oBAAjB,SAAsCK,EAAOM,UAE/C,sBAAKX,UAAU,qBAAf,UACE,cAACY,EAAA,EAAD,CACEC,GAAIC,IACJb,GAAE,yBAAoBI,EAAOU,IAA3B,OAAgCR,GAFpC,mBAMA,cAACK,EAAA,EAAD,CACEI,QAAQ,OACRH,GAAIC,IACJb,GAAE,8BAAyBI,EAAOU,IAAhC,OAAqCR,GAHzC,4B,qEC6COU,UA5DK,WAAO,IAAD,EACIC,YAAc,SAAUC,KAD5B,mBACjBb,EADiB,KACTc,EADS,KAElBC,EAAWC,cAFO,EAI+DC,aAAY,qBAAGC,WAA9FA,EAJgB,EAIhBA,QAASC,EAJO,EAIPA,MAAOC,EAJA,EAIAA,WAAYC,EAJZ,EAIYA,WAAY7B,EAJxB,EAIwBA,MAAO8B,EAJ/B,EAI+BA,aAAcC,EAJ7C,EAI6CA,cAErEC,IAAMC,WAAU,WACdV,EAASW,YAAgB,CAACC,KATjB,gBAUR,CAACZ,IAMJ,OACE,sBAAKrB,UAAU,eAAf,UACE,6CAEA,4CAAeyB,KACf,8BACE,cAACS,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,2BAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,4BACA,eAACH,EAAA,EAAKI,QAAN,CAAczB,GAAG,SAAS0B,QAAM,EAACC,MAAK,UAAKlC,GAAUmC,SAbxC,SAACC,GACtBtB,EAAUsB,EAAEC,OAAOH,QAYX,UACE,wBAAQA,MAAO,EAAf,4BACA,wBAAQA,MAAO,KAAf,kBACA,wBAAQA,MAAO,KAAf,kBACA,wBAAQA,MAAO,KAAf,kBACA,wBAAQA,MAAO,KAAf,kBACA,wBAAQA,MAAO,KAAf,4BAKR,sBAAKxC,UAAU,qBAAf,UACC6B,IAAkBJ,GAAS,cAACvB,EAAA,EAAD,CAASC,KAAM,YACvCwB,EAiBA,cAAC9B,EAAA,EAAD,CAAaC,MAAOA,EAAOC,QAAS6B,IAhBpC,8BACIF,EAWA,cAACkB,EAAA,EAAD,IAVA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGtB,EAAQuB,KAAI,SAAC1C,EAAa2C,GAAd,OACX,cAACF,EAAA,EAAUG,KAAX,UACE,cAAC,EAAD,CAAwB5C,OAAQA,EAAQC,OAAQA,GAA/B0C,IADEA","file":"static/js/8.d356d1dc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface IProps {\r\n  message: string\r\n  error: number\r\n}\r\nconst ErrorBanner: React.FC<IProps> = ({ error, message }: any) => {\r\n  if (!error) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='error-banner'>\r\n        <div>\r\n          {(error === 404 || error === 400) && (\r\n            <div>\r\n              <h2>Bad Request</h2>\r\n              <div>You request resulted in an error</div>\r\n            </div>\r\n          )}\r\n          {error === 403 && (\r\n            <div>\r\n              <h2>Forbidden</h2>\r\n              <div>You don't have permission to access</div>\r\n            </div>\r\n          )}\r\n          <Link to='/leaguse_page'>Go home</Link>\r\n        </div>\r\n      </div>\r\n      <div className='error-banner__additional-message'>{message || ''}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorBanner\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n  type: string\r\n}\r\n\r\nconst NoFound: React.FC<IProps> = ({ type }): React.ReactElement => {\r\n  return <div className='no-found'>No {type || ''} found</div>\r\n}\r\n\r\nexport default NoFound\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst LeagueCard: React.FC<any> = ({ league, season }): React.ReactElement => {\r\n  const seasonUrl = season ? `&season=${season}` : ''\r\n  return (\r\n    <div className='league-card'>\r\n      <div className='league-card__inf'>\r\n        <label className='league-card__emblem'>\r\n          {league.emblemUrl ? (\r\n            <img\r\n              className='league-card__img'\r\n              src={league.emblemUrl}\r\n              alt={`emblem ${league.name} league`}\r\n            />\r\n          ) : (\r\n            <i className='far fa-image'></i>\r\n          )}\r\n        </label>\r\n\r\n        <label className='league-card__name'>{league.name}</label>\r\n      </div>\r\n      <div className='league-card__links'>\r\n        <Button \r\n          as={Link} \r\n          to={`/teams_page?id=${league.id}${seasonUrl}`}\r\n        >\r\n          teams\r\n        </Button>\r\n        <Button\r\n          variant='info'\r\n          as={Link}\r\n          to={`/league_calendar?id=${league.id}${seasonUrl}`}\r\n        >\r\n          matches\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeagueCard","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport LeagueCard from '../components/LeagueCard'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport { fetchAllLeagues } from '../redux/thunk/LeaguesThunk'\r\nimport Preloader from '../components/common/Preloader'\r\nimport ErrorBanner from '../components/common/ErrorBanner'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useQueryParam, NumberParam } from 'use-query-params'\r\nimport NoFound from '../components/common/NoFound'\r\n\r\nconst plan = 'TIER_ONE'\r\n\r\nconst LeaguesPage = () => {\r\n  const [season, setSeason] = useQueryParam('season', NumberParam)\r\n  const dispatch = useDispatch()\r\n\r\n  const { leagues, count, isFetching, isRejected, error, errorMessage, isTryFetching } = useSelector(({ leagues }: any) => leagues)\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchAllLeagues({plan}))\r\n  }, [dispatch])\r\n\r\n  const handleSelector = (e: any) => {\r\n    setSeason(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className='leagues-page'>\r\n      <h2>LeaguesPage</h2>\r\n      {}\r\n      <div>Leagues: {count}</div>\r\n      <div>\r\n        <Form>\r\n          <Form.Group controlId='exampleForm.SelectCustom'>\r\n            <Form.Label>Select season</Form.Label>\r\n            <Form.Control as='select' custom value={`${season}`} onChange={handleSelector}>\r\n              <option value={0}>Current season</option>\r\n              <option value={2020}>2020</option>\r\n              <option value={2019}>2019</option>\r\n              <option value={2018}>2018</option>\r\n              <option value={2017}>2017</option>\r\n              <option value={2016}>2016</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n      <div className='leagues-page__list'>\r\n      {isTryFetching && !count && <NoFound type={'leagues'} />}\r\n        {!isRejected ? (\r\n          <div>\r\n            {!isFetching ? (\r\n              <Card>\r\n                <ListGroup>\r\n                  {leagues.map((league: any, index: number) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <LeagueCard key={index} league={league} season={season} />\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </Card>\r\n            ) : (\r\n              <Preloader />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <ErrorBanner error={error} message={errorMessage} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeaguesPage"],"sourceRoot":""}